{"version":3,"sources":["components/Model.js","components/Loading.js","App.js","index.js"],"names":["Model","useEffect","timer","setTimeout","console","log","clearTimeout","Controls","controls","useRef","useThree","camera","gl","useFrame","current","update","ref","autoRotate","args","domElement","group","rotation","z","useLoader","GLTFLoader","nodes","materials","dispose","scale","Math","PI","position","material","Stone","geometry","mentor_roman_retopo_0","wireframe","attach","color","roughness","metalness","Crown","nimbus002_0","nimbus001_0","nimbus003_0","extend","OrbitControls","Loading","App","useState","load","setLoad","style","display","justifyContent","alignItems","intensity","fallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAWe,SAASA,IAEtBC,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBC,QAAQC,IAAI,mCACX,KACH,OAAO,kBAAMC,aAAaJ,MACzB,IAEH,IAAMK,EAAW,WACf,IAAMC,EAAWC,mBADI,EAEEC,cAAfC,EAFa,EAEbA,OAAQC,EAFK,EAELA,GAIhB,OAHAC,aAAS,WACPL,EAASM,QAAQC,YAGjB,mCACEC,IAAKR,EACLS,YAAU,EACVC,KAAM,CAACP,EAAQC,EAAGO,eAIlBC,EAAQX,mBACdI,aAAS,WACPO,EAAMN,QAAQO,SAASC,GAAK,QAzBA,MA2BDC,YAAUC,IAAY,qBAA3CC,EA3BsB,EA2BtBA,MAAOC,EA3Be,EA2BfA,UAEf,OACE,2BAAOC,QAAS,KAAMC,MAAO,CAAC,KAAK,KAAK,OACtC,2BAAOP,SAAU,EAAEQ,KAAKC,GAAK,EAAG,EAAG,IACjC,2BAAOC,SAAU,EAAE,IAAM,KAAO,OAC9B,0BACEC,SAAUN,EAAUO,MACpBC,SAAUT,EAAMU,sBAAsBD,UAEtC,kBAAC3B,EAAD,MACA,0CACE6B,WAAS,EACTC,OAAO,WACPC,MAAM,QACNC,UAAW,GACXC,UAAW,OAIjB,2BACExB,IAAKI,EACLW,SAAU,CAAC,KAAO,IAAM,GACxBV,SAAU,EAAE,GAAK,GAAK,GACtBO,MAAO,CAAC,IAAM,IAAM,MAEpB,0BACEI,SAAUN,EAAUe,MACpBP,SAAUT,EAAMiB,YAAYR,WAE9B,0BACEF,SAAUN,EAAUe,MACpBP,SAAUT,EAAMkB,YAAYT,WAE9B,0BACEF,SAAUN,EAAUe,MACpBP,SAAUT,EAAMmB,YAAYV,cAjExCW,YAAO,CAAEC,oBCLTD,YAAO,CAAEC,oBAwCMC,MAvCf,WACE,IAAMxC,EAAW,WACf,IAAMC,EAAWC,mBADI,EAGEC,cAAfC,EAHa,EAGbA,OAAQC,EAHK,EAGLA,GAMhB,OAJAC,aAAS,WACPL,EAASM,QAAQC,YAIjB,mCACEC,IAAKR,EACLS,YAAU,EACVC,KAAM,CAACP,EAAQC,EAAGO,eAKxB,OACM,2BAAOE,SAAU,CAAE,EAAG,GAAI,KACxB,8BACA,kBAACd,EAAD,MAEA,uCACE8B,OAAO,WACPnB,KAAM,CAAC,EAAG,EAAG,KAGf,uCACEkB,WAAS,EACTC,OAAO,WACPC,MAAM,aC/BH,SAASU,IAAO,IAAD,EACJC,oBAAS,GADL,mBACrBC,EADqB,KACfC,EADe,KAQ5B,OANAlD,qBAAU,WACR,IAAMC,EAAQC,YAAW,WACvBgD,GAAQ,KACP,MACH,OAAO,kBAAM7C,aAAaJ,MACzB,IAED,oCACGgD,GACC,yBAAKE,MAAO,CAACC,QAAQ,OAAQC,eAAe,SAAUC,WAAW,aAC/D,wBAAIH,MAAO,CAACd,MAAM,UAAlB,eAGJ,kBAAC,IAAD,KACE,sCAAkBkB,UAAW,KAC5BN,EACC,oCAEE,kBAAC,EAAD,OAGF,kBAAC,WAAD,CAAUO,SAAU,kBAAC,EAAD,OAClB,kBAACzD,EAAD,SCxBZ0D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.276b4fb8.chunk.js","sourcesContent":["/*\nauto-generated by: https://github.com/react-spring/gltfjsx\n*/\n\nimport React, { useRef, useEffect } from \"react\";\nimport { useLoader, useFrame, extend, useThree } from \"react-three-fiber\";\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nextend({ OrbitControls });\n\nexport default function Model() {\n  \n  useEffect(() => {\n    const timer = setTimeout(() => {\n      console.log('This will run after 1 second!')\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const Controls = () => {\n    const controls = useRef();\n    const { camera, gl } = useThree();\n    useFrame(() => {\n      controls.current.update();\n    });\n    return (\n      <orbitControls\n        ref={controls}\n        autoRotate\n        args={[camera, gl.domElement]}\n      ></orbitControls>\n    );\n  };\n  const group = useRef();\n  useFrame(() => {\n    group.current.rotation.z += 0.004;\n  });\n  const { nodes, materials } = useLoader(GLTFLoader, \"/models/scene.glb\");\n\n  return (\n    <group dispose={null} scale={[1.19,1.19,1.19]}>\n      <group rotation={[-Math.PI / 2, 0, 0]}>\n        <group position={[-0.27, 0.12, -1.23]}>\n          <mesh\n            material={materials.Stone}\n            geometry={nodes.mentor_roman_retopo_0.geometry}\n          >\n            <Controls />\n            <meshStandardMaterial\n              wireframe\n              attach=\"material\"\n              color=\"white\"\n              roughness={0.3}\n              metalness={0.3}\n            />\n          </mesh>\n        </group>\n        <group\n          ref={group}\n          position={[0.16, -0.17, 2]}\n          rotation={[-0.1, 0.3, 0]}\n          scale={[0.89, 0.89, 0.89]}\n        >\n          <mesh\n            material={materials.Crown}\n            geometry={nodes.nimbus002_0.geometry}\n          />\n          <mesh\n            material={materials.Crown}\n            geometry={nodes.nimbus001_0.geometry}\n          />\n          <mesh\n            material={materials.Crown}\n            geometry={nodes.nimbus003_0.geometry}\n          />\n        </group>\n      </group>\n    </group>\n  );\n}\n","import React, { useRef } from \"react\";\nimport { extend, useThree, useFrame } from \"react-three-fiber\";\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\n\nextend({ OrbitControls });\nfunction Loading() {\n  const Controls = () => {\n    const controls = useRef();\n\n    const { camera, gl } = useThree();\n\n    useFrame(() => {\n      controls.current.update();\n    });\n\n    return (\n      <orbitControls\n        ref={controls}\n        autoRotate\n        args={[camera, gl.domElement]}\n      ></orbitControls>\n    );\n  };\n\n  return (\n        <group rotation={[ 0, 50, 50]}>\n          <mesh> \n          <Controls />\n\n          <boxBufferGeometry\n            attach=\"geometry\"\n            args={[1, 1, 1]}\n          ></boxBufferGeometry>\n\n          <meshBasicMaterial\n            wireframe\n            attach=\"material\"\n            color=\"white\"\n          ></meshBasicMaterial>\n        </mesh>\n        </group>\n  );\n}\n\nexport default Loading;\n","import React, { Suspense, useState, useEffect } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport \"./App.css\";\nimport Model from \"./components/Model\";\nimport Loading from \"./components/Loading\";\n\nexport default function App() {\n  const [load, setLoad] = useState(true);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoad(false);\n    }, 2500);\n    return () => clearTimeout(timer);\n  }, []);\n  return (\n    <>\n      {load && (\n        <div style={{display:'flex', justifyContent:'center', alignItems:'flex-end'}}>\n          <h1 style={{color:'white'}}>Loading...</h1>\n        </div>\n      )}\n      <Canvas>\n        <directionalLight intensity={0.5} />\n        {load ? (\n          <>\n            \n            <Loading />\n          </>\n        ) : (\n          <Suspense fallback={<Loading />}>\n            <Model />\n          </Suspense>\n        )}\n      </Canvas>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}